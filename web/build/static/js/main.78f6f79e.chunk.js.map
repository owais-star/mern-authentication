{"version":3,"sources":["core.js","components/message/Message.jsx","components/signup/SignupForm.jsx","components/signup/Signup.jsx","components/context/Reducer.js","components/context/Context.js","components/login/LoginForm.jsx","components/login/login.jsx","components/dashboard/Appbar.jsx","components/dashboard/Post.jsx","components/dashboard/PostForm.jsx","components/dashboard/Dashboard.jsx","components/splash/Splash.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","BasicAlerts","props","Stack","sx","width","spacing","Alert","variant","severity","type","message","RegisterForm","history","useHistory","useState","messageBar","setMessageBar","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","axios","post","then","response","console","log","data","setTimeout","push","catch","err","errors","touched","handleSubmit","getFieldProps","value","autoComplete","noValidate","direction","xs","sm","TextField","fullWidth","label","error","Boolean","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","prev","icon","eyeFill","eyeOffFill","LoadingButton","size","Signup","reducer","state","action","payload","_id","user","GlobalContext","createContext","undefined","ContextProvider","children","useReducer","dispatch","Provider","Login","useContext","LoginSchema","remember","withCredentials","res","show","alignItems","justifyContent","my","FormControlLabel","control","Checkbox","checked","Link","component","RouterLink","to","Search","styled","theme","borderRadius","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","Badge","badgeContent","Box","flexGrow","AppBar","Toolbar","mr","Typography","noWrap","placeholder","inputProps","md","ExpandMore","expand","other","transform","duration","shortest","CardItem","expanded","setExpanded","Card","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","src","profile","alt","title","subheader","date","CardMedia","image","postimage","CardContent","dis","CardActions","disableSpacing","PostForm","inputText","setInputText","a","preventDefault","text","author","fullName","result","marginTop","marginBottom","onChange","e","target","Button","style","Dashboar","Splash","App","useEffect","get","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78f6f79e.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import * as React from 'react';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport default function BasicAlerts(props) {\r\n  return (\r\n    <Stack sx={{ width: '100%' }} spacing={2}>\r\n      <Alert variant=\"filled\" severity= {props.type}>\r\n        {props.message}\r\n      </Alert>\r\n    </Stack>\r\n  );\r\n}","import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport { useHistory } from 'react-router-dom';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport axios from \"axios\"\r\nimport { baseUrl } from \"../../core\"\r\nimport Message from \"../message/Message\"\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function RegisterForm() {\r\n  const history = useHistory();\r\n  const [messageBar, setMessageBar] = useState(\"\")\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('First name required'),\r\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: (values) => {\r\n      //   navigate('/dashboard', { replace: true });\r\n      // console.log(values)\r\n      axios.post(`${baseUrl}/api/v1/registration`, {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          if (response.data === `User already registered.`) {\r\n            setMessageBar(false)\r\n            setTimeout(() => {\r\n              setMessageBar(\"\")\r\n            }, 3000);\r\n          } else {\r\n            setMessageBar(true)\r\n            setTimeout(() => {\r\n              history.push(\"/login\")\r\n            }, 2000);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <>\r\n\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Stack spacing={3}>\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"First name\"\r\n                {...getFieldProps('firstName')}\r\n                error={Boolean(touched.firstName && errors.firstName)}\r\n                helperText={touched.firstName && errors.firstName}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                {...getFieldProps('lastName')}\r\n                error={Boolean(touched.lastName && errors.lastName)}\r\n                helperText={touched.lastName && errors.lastName}\r\n              />\r\n            </Stack>\r\n\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"username\"\r\n              type=\"email\"\r\n              label=\"Email address\"\r\n              {...getFieldProps('email')}\r\n              error={Boolean(touched.email && errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            {messageBar === true ? <Message type=\"success\" message=\"Created Account Successfully\" /> : \"\"}\r\n            {messageBar === false ? (\r\n\r\n              <Message type=\"error\" message=\"An Account with this email is already Registered\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <LoadingButton\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            // loading={isSubmitting}\r\n            >\r\n              Register\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n    </>\r\n  );\r\n}","import {\r\n\r\n    Switch,\r\n    Route,\r\n    Link\r\n  \r\n  } from \"react-router-dom\";\r\n  import RegisterForm from \"./SignupForm\"\r\n  function Signup() {\r\n  \r\n    return (\r\n      <>\r\n      <RegisterForm/>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Signup;\r\n  \r\n\r\n\r\n\r\n","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n  \r\n      case \"USER_LOGIN\": {\r\n        if (\r\n          action.payload.firstName &&\r\n          action.payload.lastName &&\r\n          action.payload.email&&\r\n          action.payload._id) {\r\n  \r\n          return { ...state, user: action.payload }\r\n  \r\n        } else {\r\n          console.log(`invalid data in USER_LOGIN reducer `);\r\n          return state;\r\n        }\r\n      }\r\n      case \"USER_LOGOUT\": {\r\n        return { ...state, user: null } // set this to null on purpose, do not change\r\n      }\r\n  \r\n  \r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  user: undefined,\r\n};\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink} from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport axios from \"axios\"\r\nimport { baseUrl } from \"../../core\"\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\nimport Message from \"../message/Message\"\r\n// material\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel,\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Login() {\r\n  const [messageBar, setMessageBar] = useState(\"\")\r\n  const [showPassword, setShowPassword] = useState();\r\n  let { dispatch , state } = useContext(GlobalContext);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      remember: true\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (values) => {\r\n      axios.post(`${baseUrl}/api/v1/login`,{\r\n        email: values.email,\r\n        password: values.password,\r\n      }\r\n      ,\r\n      {\r\n        withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          if (res.data === \"No user is found with this email\"\r\n            || res.data === \"Entered password is incorrect\") {\r\n            setMessageBar(false)\r\n            setTimeout(() => {\r\n              setMessageBar(\"\")\r\n            }, 3000);\r\n          } else {\r\n\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                firstName: res.data.firstName,\r\n                lastName: res.data.lastName,\r\n                email: res.data.email,\r\n                _id: res.data._id\r\n              }\r\n            })\r\n            setMessageBar(true)\r\n            setTimeout(() => {\r\n              setMessageBar(\"\")\r\n            }, 2000);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, values, handleSubmit, getFieldProps } = formik;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((show) => !show);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Stack spacing={3}>\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"username\"\r\n              type=\"email\"\r\n              label=\"Email address\"\r\n              {...getFieldProps('email')}\r\n              error={Boolean(touched.email && errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            {messageBar === true ? <Message type=\"success\" message=\"Welcome\" /> : \"\"}\r\n          {messageBar === false ? (\r\n\r\n            <Message type=\"error\" message=\"Invalid email or password\" />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          </Stack>\r\n          \r\n\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n            <FormControlLabel\r\n              control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\r\n              label=\"Remember me\"\r\n            />\r\n\r\n            <Link component={RouterLink} variant=\"subtitle2\" to=\"#\">\r\n              Forgot password?\r\n            </Link>\r\n          </Stack>\r\n          \r\n\r\n          <LoadingButton\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Login\r\n          </LoadingButton>\r\n        </Form>\r\n      </FormikProvider>\r\n    </>\r\n  );\r\n}","import LoginForm from \"./LoginForm\"\r\n\r\n\r\nfunction Login(){\r\n  return(\r\n    <LoginForm/>\r\n  )\r\n}\r\n\r\nexport default Login;","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n            MUI\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"error\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function CardItem(props) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 300 }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n            <img width=\"50px\" src={props.profile} alt=\"loading...\" />\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={props.title}\r\n        subheader={props.date}/>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"194\"\r\n        image={props.postimage}\r\n        alt=\"Image Loading...\"/>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {props.dis}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\">\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { baseUrl } from \"../../core\"\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\nimport Message from \"../message/Message\"\r\n\r\n\r\n\r\n\r\nexport default function PostForm() {\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n    const [inputText, setInputText] = useState(\"\");\r\n\r\n    const inputOnChange = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitPost = (a) => {\r\n        a.preventDefault();\r\n        if (inputText !== \"\") {\r\n            if (state?.user?.firstName) {\r\n                axios\r\n                    .post(`${baseUrl}/api/v1/post`, {\r\n                        text: inputText,\r\n                        author: state.user.fullName,\r\n                    })\r\n                    .then((result) => {\r\n                        // console.log(result.data);\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={submitPost}>\r\n                <Box\r\n                    sx={{\r\n                        \"& > :not(style)\": {\r\n                            marginTop: \"20px\",\r\n                            marginBottom: \"14px\",\r\n                            width: \"100%\",\r\n                        },\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <TextField\r\n                        label=\"Enter text\"\r\n                        value={inputText}\r\n                        onChange={inputOnChange}\r\n                        variant=\"filled\"\r\n                    />\r\n                </Box>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    style={{ marginBottom: \"40px\" }}\r\n                    type=\"submit\"\r\n                >\r\n                    Post\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport axios from \"axios\";\r\nimport Message from \"../message/Message\";\r\nimport { baseUrl } from \"../../core\"\r\nimport PrimarySearchAppBar from \"./Appbar\"\r\nimport CardItem from \"./Post\";\r\nimport PostForm from \"./PostForm\";\r\nimport \"./dashboard.css\"\r\n\r\n\r\nfunction Dashboar() {\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n  function logout() {\r\n    dispatch({\r\n      type: \"USER_LOGOUT\"\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <PrimarySearchAppBar />\r\n    <h1>{state.user.email}</h1>\r\n    <PostForm />\r\n    <CardItem title = \"test\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboar;","\r\nexport default function Splash(){\r\n\r\n\r\n    return(\r\n        <>\r\n        <h1>Loading....</h1>\r\n        </>\r\n    )\r\n}","import React from \"react\";\nimport Signup from \"./components/signup/Signup\";\nimport Login from \"./components/login/login\";\nimport Dashboar from \"./components/dashboard/Dashboard\";\nimport { useEffect, useContext } from \"react\"\nimport { GlobalContext } from './components/context/Context';\nimport axios from 'axios';\nimport { baseUrl } from \"./core\";\nimport Splash from './components/splash/Splash'\nimport {\n\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  let { state, dispatch } = useContext(GlobalContext);\n\n  useEffect(() => {\n\n    axios.get(`${baseUrl}/api/v1/profile`, {\n      withCredentials: true\n    })\n      .then((res) => {\n\n        if (res.data.email) {\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: {\n              firstName: res.data.firstName,\n              lastName: res.data.lastName,\n              email: res.data.email,\n              _id: res.data._id\n            }\n          })\n        } else {\n          dispatch({ type: \"USER_LOGOUT\" })\n        }\n      }).catch((e) => {\n        dispatch({ type: \"USER_LOGOUT\" })\n      })\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <>\n      {(state.user === undefined) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Splash />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n      {(state.user === null) ?\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch> : null\n      }\n\n      {(state.user) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboar />\n          </Route>\n\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n    </>\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n\n} from \"react-router-dom\";\n\nimport ContextProvider from \"./components/context/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}